# Generated by Django 4.2.9 on 2024-07-06 09:38

from django.db import migrations, models
import django.db.models.deletion
import meta.models
import sorl.thumbnail.fields
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='active')),
                ('slug', models.SlugField(max_length=200, null=True, unique=True, verbose_name='slug')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
            ],
            options={
                'verbose_name': 'author',
                'verbose_name_plural': 'authors',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='active')),
                ('slug', models.SlugField(max_length=200, null=True, unique=True, verbose_name='slug')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='active')),
                ('slug', models.SlugField(max_length=200, null=True, unique=True, verbose_name='slug')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'tag',
                'verbose_name_plural': 'tags',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='active')),
                ('slug', models.SlugField(max_length=200, null=True, unique=True, verbose_name='slug')),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('expired_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('f', 'Finished'), ('o', 'On hold'), ('p', 'Published'), ('d', 'Draft')], default='d', max_length=1, verbose_name='Publication status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='modified_at')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('subtitle', models.CharField(blank=True, max_length=255, verbose_name='subtitle')),
                ('excerpt', models.TextField(verbose_name='excerpt')),
                ('text', tinymce.models.HTMLField(verbose_name='text')),
                ('featured', models.BooleanField(default=False, help_text='Display on the home page', verbose_name='featured')),
                ('image', sorl.thumbnail.fields.ImageField(blank=True, default='static/ecd_blog/images/default.png', upload_to='blog_posts/', verbose_name='imagen')),
                ('meta_title', models.TextField(default='', help_text='with a maximum of 55 characters', max_length=55, verbose_name='meta-title')),
                ('meta_description', models.TextField(default='', help_text='with a maximum of 140 characters', max_length=140, verbose_name='meta-description')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='posts', to='blog.author', verbose_name='autor')),
                ('category', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='posts', to='blog.category', verbose_name='category')),
                ('tags', models.ManyToManyField(blank=True, related_name='posts', to='blog.tag', verbose_name='tags')),
            ],
            options={
                'verbose_name': 'new',
                'verbose_name_plural': 'news',
                'ordering': ['-published_at'],
            },
            bases=(models.Model, meta.models.ModelMeta),
        ),
        migrations.CreateModel(
            name='Picture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alt', models.CharField(max_length=255, verbose_name='alt')),
                ('image', sorl.thumbnail.fields.ImageField(upload_to='blog_galleries/', verbose_name='image')),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pictures', to='blog.post', verbose_name='news')),
            ],
            options={
                'verbose_name': 'image',
                'verbose_name_plural': 'images',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='modified_at')),
                ('text', models.TextField(verbose_name='text')),
                ('approved', models.BooleanField(default=False, verbose_name='approved')),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blog.post', verbose_name='news')),
            ],
            options={
                'verbose_name': 'comment',
                'verbose_name_plural': 'comments',
                'ordering': ['approved', 'post', 'created_at'],
            },
        ),
    ]
